{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkArea\\\\CodingChallenges\\\\price-updates-app\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [connection, setConnection] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [priceChanges, setPriceChanges] = useState({});\n\n  // Load initial items\n  useEffect(() => {\n    const fetchInitialItems = async () => {\n      try {\n        const response = await fetch('https://localhost:7078/items');\n        const data = await response.json();\n        setItems(data);\n        setLoading(false);\n\n        // Initialize price changes tracking\n        const initialChanges = {};\n        data.forEach(item => {\n          initialChanges[item.id] = 'same';\n        });\n        setPriceChanges(initialChanges);\n      } catch (err) {\n        console.error('Failed to load initial items:', err);\n        setLoading(false);\n      }\n    };\n    fetchInitialItems();\n  }, []);\n\n  // Initialize SignalR connection\n  useEffect(() => {\n    const newConnection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7078/pricehub\", {\n      skipNegotiation: false,\n      transport: signalR.HttpTransportType.WebSockets,\n      withCredentials: true,\n      logger: signalR.LogLevel.Debug\n    }).configureLogging(signalR.LogLevel.Debug).build();\n    setConnection(newConnection);\n    return () => {\n      if (newConnection) {\n        newConnection.stop();\n      }\n    };\n  }, []);\n\n  // Handle price change indicators\n  const updatePriceChange = newItems => {\n    setItems(prevItems => {\n      const changes = {};\n      newItems.forEach(newItem => {\n        const oldItem = prevItems.find(item => item.id === newItem.id);\n        if (!oldItem) {\n          changes[newItem.id] = 'same';\n          return;\n        }\n        if (newItem.price > oldItem.price) changes[newItem.id] = 'up';else if (newItem.price < oldItem.price) changes[newItem.id] = 'down';else changes[newItem.id] = 'same';\n      });\n      setPriceChanges(changes);\n      return newItems;\n    });\n  };\n\n  // Subscribe to price updates\n  const subscribeToUpdates = async () => {\n    if (!connection) return;\n    try {\n      await connection.invoke('SubscribeToPriceUpdates');\n      setIsSubscribed(true);\n      connection.on('ReceivePriceUpdates', updatedItems => {\n        updatePriceChange(updatedItems);\n      });\n      connection.on('ReceivePriceUpdate', updatedItem => {\n        updatePriceChange(items.map(item => item.id === updatedItem.id ? updatedItem : item));\n      });\n    } catch (err) {\n      console.error('Subscription failed:', err);\n    }\n  };\n\n  // Unsubscribe from price updates\n  const unsubscribeFromUpdates = async () => {\n    if (!connection) return;\n    try {\n      await connection.invoke('UnsubscribeFromPriceUpdates');\n      setIsSubscribed(false);\n\n      // Remove handlers but keep connection alive\n      connection.off('ReceivePriceUpdates');\n      connection.off('ReceivePriceUpdate');\n    } catch (err) {\n      console.error('Unsubscription failed:', err);\n    }\n  };\n\n  // Start/stop connection\n  useEffect(() => {\n    if (!connection) return;\n    const startConnection = async () => {\n      try {\n        setConnectionStatus('Connecting...');\n        await connection.start();\n        setConnectionStatus('Connected');\n      } catch (err) {\n        setConnectionStatus('Connection Failed');\n        console.error('Connection error:', err);\n        setTimeout(startConnection, 5000);\n      }\n    };\n    startConnection();\n    return () => {\n      connection.off('ReceivePriceUpdates');\n      connection.off('ReceivePriceUpdate');\n    };\n  }, [connection]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading initial items...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Price Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `status-indicator ${connectionStatus.toLowerCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), \"Status: \", connectionStatus, \" | Subscription: \", isSubscribed ? 'Active' : 'Inactive']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subscribe-btn\",\n        onClick: subscribeToUpdates,\n        disabled: !connection || isSubscribed,\n        children: \"Subscribe to Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"unsubscribe-btn\",\n        onClick: unsubscribeFromUpdates,\n        disabled: !connection || !isSubscribed,\n        children: \"Unsubscribe from Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.updatedAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `change-indicator ${priceChanges[item.id] || 'same'}`,\n              children: priceChanges[item.id] === 'up' ? '↑' : priceChanges[item.id] === 'down' ? '↓' : '→'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nxG5yB0R2yLjxypuPe1uZiOVrDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","signalR","jsxDEV","_jsxDEV","App","_s","items","setItems","connection","setConnection","connectionStatus","setConnectionStatus","isSubscribed","setIsSubscribed","loading","setLoading","priceChanges","setPriceChanges","fetchInitialItems","response","fetch","data","json","initialChanges","forEach","item","id","err","console","error","newConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","withCredentials","logger","LogLevel","Debug","configureLogging","build","stop","updatePriceChange","newItems","prevItems","changes","newItem","oldItem","find","price","subscribeToUpdates","invoke","on","updatedItems","updatedItem","map","unsubscribeFromUpdates","off","startConnection","start","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","onClick","disabled","name","toFixed","Date","updatedAt","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/WorkArea/CodingChallenges/price-updates-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [connection, setConnection] = useState<signalR.HubConnection | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<string>('Disconnected');\n  const [isSubscribed, setIsSubscribed] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [priceChanges, setPriceChanges] = useState<Record<string, 'up' | 'down' | 'same'>>({});\n\n  // Load initial items\n  useEffect(() => {\n    const fetchInitialItems = async () => {\n      try {\n        const response = await fetch('https://localhost:7078/items');\n        const data = await response.json();\n        setItems(data);\n        setLoading(false);\n        \n        // Initialize price changes tracking\n        const initialChanges: Record<string, 'same'> = {};\n        data.forEach((item: Item) => {\n          initialChanges[item.id] = 'same';\n        });\n        setPriceChanges(initialChanges);\n      } catch (err) {\n        console.error('Failed to load initial items:', err);\n        setLoading(false);\n      }\n    };\n\n    fetchInitialItems();\n  }, []);\n\n  // Initialize SignalR connection\n  useEffect(() => {\n    const newConnection = new signalR.HubConnectionBuilder()\n      .withUrl(\"https://localhost:7078/pricehub\", {\n        skipNegotiation: false,\n        transport: signalR.HttpTransportType.WebSockets,\n        withCredentials: true,\n        logger: signalR.LogLevel.Debug\n      })\n      .configureLogging(signalR.LogLevel.Debug)\n      .build();\n\n    setConnection(newConnection);\n\n    return () => {\n      if (newConnection) {\n        newConnection.stop();\n      }\n    };\n  }, []);\n\n  // Handle price change indicators\n  const updatePriceChange = (newItems: Item[]) => {\n    setItems(prevItems => {\n      const changes: Record<string, 'up' | 'down' | 'same'> = {};\n      \n      newItems.forEach(newItem => {\n        const oldItem = prevItems.find(item => item.id === newItem.id);\n        if (!oldItem) {\n          changes[newItem.id] = 'same';\n          return;\n        }\n\n        if (newItem.price > oldItem.price) changes[newItem.id] = 'up';\n        else if (newItem.price < oldItem.price) changes[newItem.id] = 'down';\n        else changes[newItem.id] = 'same';\n      });\n\n      setPriceChanges(changes);\n      return newItems;\n    });\n  };\n\n  // Subscribe to price updates\n  const subscribeToUpdates = async () => {\n    if (!connection) return;\n\n    try {\n      await connection.invoke('SubscribeToPriceUpdates');\n      setIsSubscribed(true);\n      \n      connection.on('ReceivePriceUpdates', (updatedItems: Item[]) => {\n        updatePriceChange(updatedItems);\n      });\n\n      connection.on('ReceivePriceUpdate', (updatedItem: Item) => {\n        updatePriceChange(items.map(item => \n          item.id === updatedItem.id ? updatedItem : item\n        ));\n      });\n\n    } catch (err) {\n      console.error('Subscription failed:', err);\n    }\n  };\n\n  // Unsubscribe from price updates\n  const unsubscribeFromUpdates = async () => {\n    if (!connection) return;\n\n    try {\n      await connection.invoke('UnsubscribeFromPriceUpdates');\n      setIsSubscribed(false);\n      \n      // Remove handlers but keep connection alive\n      connection.off('ReceivePriceUpdates');\n      connection.off('ReceivePriceUpdate');\n\n    } catch (err) {\n      console.error('Unsubscription failed:', err);\n    }\n  };\n\n  // Start/stop connection\n  useEffect(() => {\n    if (!connection) return;\n\n    const startConnection = async () => {\n      try {\n        setConnectionStatus('Connecting...');\n        await connection.start();\n        setConnectionStatus('Connected');\n      } catch (err) {\n        setConnectionStatus('Connection Failed');\n        console.error('Connection error:', err);\n        setTimeout(startConnection, 5000);\n      }\n    };\n\n    startConnection();\n\n    return () => {\n      connection.off('ReceivePriceUpdates');\n      connection.off('ReceivePriceUpdate');\n    };\n  }, [connection]);\n\n  if (loading) {\n    return <div className=\"loading\">Loading initial items...</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Price Updates</h1>\n      \n      <div className=\"connection-status\">\n      <span className={`status-indicator ${connectionStatus.toLowerCase()}`}></span>\n      Status: {connectionStatus} | Subscription: {isSubscribed ? 'Active' : 'Inactive'}\n      </div>\n\n      <div className=\"buttons\">\n        <button \n          className=\"subscribe-btn\"\n          onClick={subscribeToUpdates}\n          disabled={!connection || isSubscribed}\n        >\n          Subscribe to Updates\n        </button>\n        \n        <button \n          className=\"unsubscribe-btn\"\n          onClick={unsubscribeFromUpdates}\n          disabled={!connection || !isSubscribed}\n        >\n          Unsubscribe from Updates\n        </button>\n      </div>\n\n      <div className=\"items-list\">\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Updated At</th>\n              <th>Change</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map(item => (\n              <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>${item.price.toFixed(2)}</td>\n                <td>{new Date(item.updatedAt).toLocaleTimeString()}</td>\n                <td className={`change-indicator ${priceChanges[item.id] || 'same'}`}>\n                  {priceChanges[item.id] === 'up' ? '↑' : \n                   priceChanges[item.id] === 'down' ? '↓' : '→'}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}