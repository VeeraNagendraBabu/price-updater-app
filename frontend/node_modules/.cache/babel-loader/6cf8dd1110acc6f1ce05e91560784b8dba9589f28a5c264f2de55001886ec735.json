{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkArea\\\\CodingChallenges\\\\price-updates-app\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [connection, setConnection] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\n  const [loading, setLoading] = useState(true);\n\n  // 1. Load initial items\n  useEffect(() => {\n    const fetchInitialItems = async () => {\n      try {\n        const response = await fetch('https://localhost:7078/items');\n        const data = await response.json();\n        setItems(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Failed to load initial items:', err);\n        setLoading(false);\n      }\n    };\n    fetchInitialItems();\n  }, []);\n\n  // 2. Initialize SignalR connection\n  useEffect(() => {\n    const newConnection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7078/pricehub\", {\n      skipNegotiation: false,\n      transport: signalR.HttpTransportType.WebSockets,\n      withCredentials: true,\n      logger: signalR.LogLevel.Debug\n    }).configureLogging(signalR.LogLevel.Debug).build();\n    setConnection(newConnection);\n    return () => {\n      if (newConnection) {\n        newConnection.stop();\n      }\n    };\n  }, []);\n\n  // 3. Start connection and setup handlers\n  useEffect(() => {\n    if (!connection) return;\n    const startConnection = async () => {\n      try {\n        setConnectionStatus('Connecting...');\n        await connection.start();\n        setConnectionStatus('Connected');\n        console.log('SignalR Connected.');\n        await connection.invoke('SubscribeToPriceUpdates');\n        connection.on('ReceivePriceUpdates', updatedItems => {\n          console.log('Batch update received:', updatedItems);\n          setItems(updatedItems);\n        });\n        connection.on('ReceivePriceUpdate', updatedItem => {\n          console.log('Single item update:', updatedItem);\n          setItems(prev => prev.map(item => item.id === updatedItem.id ? updatedItem : item));\n        });\n        connection.onclose(() => {\n          setConnectionStatus('Disconnected');\n          console.log('Connection closed. Attempting to reconnect...');\n          setTimeout(startConnection, 5000);\n        });\n        connection.onreconnecting(() => {\n          setConnectionStatus('Reconnecting...');\n          console.log('Connection reconnecting...');\n        });\n        connection.onreconnected(() => {\n          setConnectionStatus('Connected');\n          console.log('Connection reestablished.');\n        });\n      } catch (err) {\n        setConnectionStatus('Connection Failed');\n        console.error('Connection error:', err);\n        setTimeout(startConnection, 5000);\n      }\n    };\n    startConnection();\n    return () => {\n      connection.off('ReceivePriceUpdates');\n      connection.off('ReceivePriceUpdate');\n    };\n  }, [connection]);\n  const triggerPriceUpdate = async itemId => {\n    try {\n      await fetch(`https://localhost:7078/items/update-price/${itemId}`, {\n        method: 'POST'\n      });\n    } catch (err) {\n      console.error('Failed to trigger update:', err);\n    }\n  };\n  const updateAllPrices = async () => {\n    try {\n      await fetch('https://localhost:7078/items/update-all-prices', {\n        method: 'POST'\n      });\n    } catch (err) {\n      console.error('Failed to update all prices:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading initial items...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Price Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [\"Status: \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          var _items$;\n          return triggerPriceUpdate((_items$ = items[0]) === null || _items$ === void 0 ? void 0 : _items$.id);\n        },\n        disabled: !connection,\n        children: \"Update First Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateAllPrices,\n        disabled: !connection,\n        children: \"Update All Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.updatedAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => triggerPriceUpdate(item.id),\n                children: \"Trigger Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XRl+9/fh2qRuXwwElQJ/WLU1KaI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","signalR","jsxDEV","_jsxDEV","App","_s","items","setItems","connection","setConnection","connectionStatus","setConnectionStatus","loading","setLoading","fetchInitialItems","response","fetch","data","json","err","console","error","newConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","withCredentials","logger","LogLevel","Debug","configureLogging","build","stop","startConnection","start","log","invoke","on","updatedItems","updatedItem","prev","map","item","id","onclose","setTimeout","onreconnecting","onreconnected","off","triggerPriceUpdate","itemId","method","updateAllPrices","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_items$","disabled","name","price","toFixed","Date","updatedAt","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/WorkArea/CodingChallenges/price-updates-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\n\ninterface Item {\n  id: string;\n  name: string;\n  price: number;\n  updatedAt: string;\n}\n\nconst App: React.FC = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [connection, setConnection] = useState<signalR.HubConnection | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<string>('Disconnected');\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // 1. Load initial items\n  useEffect(() => {\n    const fetchInitialItems = async () => {\n      try {\n        const response = await fetch('https://localhost:7078/items');\n        const data = await response.json();\n        setItems(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Failed to load initial items:', err);\n        setLoading(false);\n      }\n    };\n\n    fetchInitialItems();\n  }, []);\n\n  // 2. Initialize SignalR connection\n  useEffect(() => {\n    const newConnection = new signalR.HubConnectionBuilder()\n      .withUrl(\"https://localhost:7078/pricehub\", {\n        skipNegotiation: false,\n        transport: signalR.HttpTransportType.WebSockets,\n        withCredentials: true,\n        logger: signalR.LogLevel.Debug\n      })\n      .configureLogging(signalR.LogLevel.Debug)\n      .build();\n\n    setConnection(newConnection);\n\n    return () => {\n      if (newConnection) {\n        newConnection.stop();\n      }\n    };\n  }, []);\n\n  // 3. Start connection and setup handlers\n  useEffect(() => {\n    if (!connection) return;\n\n    const startConnection = async () => {\n      try {\n        setConnectionStatus('Connecting...');\n        await connection.start();\n        setConnectionStatus('Connected');\n        console.log('SignalR Connected.');\n\n        await connection.invoke('SubscribeToPriceUpdates');\n\n        connection.on('ReceivePriceUpdates', (updatedItems: Item[]) => {\n          console.log('Batch update received:', updatedItems);\n          setItems(updatedItems);\n        });\n\n        connection.on('ReceivePriceUpdate', (updatedItem: Item) => {\n          console.log('Single item update:', updatedItem);\n          setItems(prev => prev.map(item => \n            item.id === updatedItem.id ? updatedItem : item\n          ));\n        });\n\n        connection.onclose(() => {\n          setConnectionStatus('Disconnected');\n          console.log('Connection closed. Attempting to reconnect...');\n          setTimeout(startConnection, 5000);\n        });\n\n        connection.onreconnecting(() => {\n          setConnectionStatus('Reconnecting...');\n          console.log('Connection reconnecting...');\n        });\n\n        connection.onreconnected(() => {\n          setConnectionStatus('Connected');\n          console.log('Connection reestablished.');\n        });\n\n      } catch (err) {\n        setConnectionStatus('Connection Failed');\n        console.error('Connection error:', err);\n        setTimeout(startConnection, 5000);\n      }\n    };\n\n    startConnection();\n\n    return () => {\n      connection.off('ReceivePriceUpdates');\n      connection.off('ReceivePriceUpdate');\n    };\n  }, [connection]);\n\n  const triggerPriceUpdate = async (itemId: string) => {\n    try {\n      await fetch(`https://localhost:7078/items/update-price/${itemId}`, {\n        method: 'POST'\n      });\n    } catch (err) {\n      console.error('Failed to trigger update:', err);\n    }\n  };\n\n  const updateAllPrices = async () => {\n    try {\n      await fetch('https://localhost:7078/items/update-all-prices', {\n        method: 'POST'\n      });\n    } catch (err) {\n      console.error('Failed to update all prices:', err);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading initial items...</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Price Updates</h1>\n      <div className=\"connection-status\">\n        Status: {connectionStatus}\n      </div>\n\n      <div className=\"controls\">\n        <button onClick={() => triggerPriceUpdate(items[0]?.id)} disabled={!connection}>\n          Update First Item\n        </button>\n        <button onClick={updateAllPrices} disabled={!connection}>\n          Update All Prices\n        </button>\n      </div>\n\n      <div className=\"items-list\">\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Last Updated</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map(item => (\n              <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>${item.price.toFixed(2)}</td>\n                <td>{new Date(item.updatedAt).toLocaleTimeString()}</td>\n                <td>\n                  <button onClick={() => triggerPriceUpdate(item.id)}>\n                    Trigger Update\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}