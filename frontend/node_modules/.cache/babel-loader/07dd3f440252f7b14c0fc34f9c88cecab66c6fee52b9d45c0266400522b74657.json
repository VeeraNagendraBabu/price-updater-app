{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkArea\\\\CodingChallenges\\\\price-updates-app\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for our items and connection\n  const [items, setItems] = useState([]);\n  const [hubConnection, setHubConnection] = useState(null);\n  const [connectionState, setConnectionState] = useState('Disconnected');\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [priceChanges, setPriceChanges] = useState({});\n\n  // First thing - load our initial items when component mounts\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        const response = await fetch('https://localhost:7078/items');\n        const initialItems = await response.json();\n        setItems(initialItems);\n\n        // Set up tracking for price changes\n        const initialPriceStates = {};\n        initialItems.forEach(item => {\n          initialPriceStates[item.id] = 'same';\n        });\n        setPriceChanges(initialPriceStates);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Couldn't load initial data:\", error);\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n  }, []);\n\n  // Set up our SignalR connection\n  useEffect(() => {\n    // Create the connection to our hub\n    const connection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7078/pricehub\", {\n      transport: signalR.HttpTransportType.WebSockets,\n      withCredentials: true\n    }).configureLogging(signalR.LogLevel.Information).build();\n    setHubConnection(connection);\n\n    // Clean up when component unmounts\n    return () => {\n      if (connection) {\n        connection.stop();\n      }\n    };\n  }, []);\n\n  // Handle connecting and disconnecting\n  useEffect(() => {\n    if (!hubConnection) return;\n    const startConnection = async () => {\n      try {\n        setConnectionState('Connecting...');\n        await hubConnection.start();\n        setConnectionState('Connected');\n      } catch (error) {\n        setConnectionState('Connection Failed');\n        console.error(\"Couldn't connect to hub:\", error);\n        // Try again after 5 seconds if it fails\n        setTimeout(startConnection, 5000);\n      }\n    };\n    startConnection();\n    return () => {\n      // Remove our listeners when component unmounts\n      hubConnection.off('ReceivePriceUpdates');\n      hubConnection.off('ReceivePriceUpdate');\n    };\n  }, [hubConnection]);\n\n  // Track price movements\n  const trackPriceChanges = updatedItems => {\n    setItems(currentItems => {\n      const changes = {};\n      updatedItems.forEach(updatedItem => {\n        const currentItem = currentItems.find(item => item.id === updatedItem.id);\n        if (!currentItem) {\n          changes[updatedItem.id] = 'same';\n          return;\n        }\n        if (updatedItem.price > currentItem.price) {\n          changes[updatedItem.id] = 'up';\n        } else if (updatedItem.price < currentItem.price) {\n          changes[updatedItem.id] = 'down';\n        } else {\n          changes[updatedItem.id] = 'same';\n        }\n      });\n      setPriceChanges(changes);\n      return updatedItems;\n    });\n  };\n\n  // Subscribe to live updates\n  const startUpdates = async () => {\n    if (!hubConnection) return;\n    try {\n      await hubConnection.invoke('SubscribeToPriceUpdates');\n      setIsSubscribed(true);\n\n      // Set up our listeners for updates\n      hubConnection.on('ReceivePriceUpdates', newItems => {\n        trackPriceChanges(newItems);\n      });\n      hubConnection.on('ReceivePriceUpdate', updatedItem => {\n        trackPriceChanges(items.map(item => item.id === updatedItem.id ? updatedItem : item));\n      });\n    } catch (error) {\n      console.error(\"Failed to subscribe:\", error);\n    }\n  };\n\n  // Stop receiving updates\n  const stopUpdates = async () => {\n    if (!hubConnection) return;\n    try {\n      await hubConnection.invoke('UnsubscribeFromPriceUpdates');\n      setIsSubscribed(false);\n\n      // Remove our update listeners\n      hubConnection.off('ReceivePriceUpdates');\n      hubConnection.off('ReceivePriceUpdate');\n    } catch (error) {\n      console.error(\"Failed to unsubscribe:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading items...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Live Price Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `connection-dot ${connectionState.toLowerCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Connection: \", connectionState, \" | Updates: \", isSubscribed ? 'ON' : 'OFF']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subscribe-button\",\n        onClick: startUpdates,\n        disabled: !hubConnection || isSubscribed,\n        children: \"Start Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"unsubscribe-button\",\n        onClick: stopUpdates,\n        disabled: !hubConnection || !isSubscribed,\n        children: \"Stop Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prices-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.updatedAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `change-arrow ${priceChanges[item.id] || 'same'}`,\n              children: priceChanges[item.id] === 'up' ? '↑' : priceChanges[item.id] === 'down' ? '↓' : '→'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FfZSduW1Oqy1ZlHjlN5p7DNOX08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","signalR","jsxDEV","_jsxDEV","App","_s","items","setItems","hubConnection","setHubConnection","connectionState","setConnectionState","isSubscribed","setIsSubscribed","loading","setLoading","priceChanges","setPriceChanges","loadInitialData","response","fetch","initialItems","json","initialPriceStates","forEach","item","id","error","console","connection","HubConnectionBuilder","withUrl","transport","HttpTransportType","WebSockets","withCredentials","configureLogging","LogLevel","Information","build","stop","startConnection","start","setTimeout","off","trackPriceChanges","updatedItems","currentItems","changes","updatedItem","currentItem","find","price","startUpdates","invoke","on","newItems","map","stopUpdates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","onClick","disabled","name","toFixed","Date","updatedAt","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/WorkArea/CodingChallenges/price-updates-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport './App.css';\nimport Item from './models/Items';\nimport PriceChange from './models/PriceChange';\n\nconst App = () => {\n  // State for our items and connection\n  const [items, setItems] = useState<Item[]>([]);\n  const [hubConnection, setHubConnection] = useState<signalR.HubConnection | null>(null);\n  const [connectionState, setConnectionState] = useState('Disconnected');\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [priceChanges, setPriceChanges] = useState<Record<string, PriceChange>>({});\n\n  // First thing - load our initial items when component mounts\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        const response = await fetch('https://localhost:7078/items');\n        const initialItems = await response.json();\n        \n        setItems(initialItems);\n        \n        // Set up tracking for price changes\n        const initialPriceStates: Record<string, PriceChange> = {};\n        initialItems.forEach((item: Item) => {\n          initialPriceStates[item.id] = 'same';\n        });\n        setPriceChanges(initialPriceStates);\n        \n        setLoading(false);\n      } catch (error) {\n        console.error(\"Couldn't load initial data:\", error);\n        setLoading(false);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // Set up our SignalR connection\n  useEffect(() => {\n    // Create the connection to our hub\n    const connection = new signalR.HubConnectionBuilder()\n      .withUrl(\"https://localhost:7078/pricehub\", {\n        transport: signalR.HttpTransportType.WebSockets,\n        withCredentials: true\n      })\n      .configureLogging(signalR.LogLevel.Information)\n      .build();\n\n    setHubConnection(connection);\n\n    // Clean up when component unmounts\n    return () => {\n      if (connection) {\n        connection.stop();\n      }\n    };\n  }, []);\n\n  // Handle connecting and disconnecting\n  useEffect(() => {\n    if (!hubConnection) return;\n\n    const startConnection = async () => {\n      try {\n        setConnectionState('Connecting...');\n        await hubConnection.start();\n        setConnectionState('Connected');\n      } catch (error) {\n        setConnectionState('Connection Failed');\n        console.error(\"Couldn't connect to hub:\", error);\n        // Try again after 5 seconds if it fails\n        setTimeout(startConnection, 5000);\n      }\n    };\n\n    startConnection();\n\n    return () => {\n      // Remove our listeners when component unmounts\n      hubConnection.off('ReceivePriceUpdates');\n      hubConnection.off('ReceivePriceUpdate');\n    };\n  }, [hubConnection]);\n\n  // Track price movements\n  const trackPriceChanges = (updatedItems: Item[]) => {\n    setItems(currentItems => {\n      const changes: Record<string, PriceChange> = {};\n      \n      updatedItems.forEach(updatedItem => {\n        const currentItem = currentItems.find(item => item.id === updatedItem.id);\n        \n        if (!currentItem) {\n          changes[updatedItem.id] = 'same';\n          return;\n        }\n\n        if (updatedItem.price > currentItem.price) {\n          changes[updatedItem.id] = 'up';\n        } else if (updatedItem.price < currentItem.price) {\n          changes[updatedItem.id] = 'down';\n        } else {\n          changes[updatedItem.id] = 'same';\n        }\n      });\n\n      setPriceChanges(changes);\n      return updatedItems;\n    });\n  };\n\n  // Subscribe to live updates\n  const startUpdates = async () => {\n    if (!hubConnection) return;\n\n    try {\n      await hubConnection.invoke('SubscribeToPriceUpdates');\n      setIsSubscribed(true);\n      \n      // Set up our listeners for updates\n      hubConnection.on('ReceivePriceUpdates', (newItems: Item[]) => {\n        trackPriceChanges(newItems);\n      });\n\n      hubConnection.on('ReceivePriceUpdate', (updatedItem: Item) => {\n        trackPriceChanges(items.map(item => \n          item.id === updatedItem.id ? updatedItem : item\n        ));\n      });\n\n    } catch (error) {\n      console.error(\"Failed to subscribe:\", error);\n    }\n  };\n\n  // Stop receiving updates\n  const stopUpdates = async () => {\n    if (!hubConnection) return;\n\n    try {\n      await hubConnection.invoke('UnsubscribeFromPriceUpdates');\n      setIsSubscribed(false);\n      \n      // Remove our update listeners\n      hubConnection.off('ReceivePriceUpdates');\n      hubConnection.off('ReceivePriceUpdate');\n\n    } catch (error) {\n      console.error(\"Failed to unsubscribe:\", error);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading items...</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Live Price Updates</h1>\n      \n      <div className=\"connection-info\">\n        <span className={`connection-dot ${connectionState.toLowerCase()}`}></span>\n        <span>\n          Connection: {connectionState} | \n          Updates: {isSubscribed ? 'ON' : 'OFF'}\n        </span>\n      </div>\n\n      <div className=\"controls\">\n        <button \n          className=\"subscribe-button\"\n          onClick={startUpdates}\n          disabled={!hubConnection || isSubscribed}\n        >\n          Start Updates\n        </button>\n        \n        <button \n          className=\"unsubscribe-button\"\n          onClick={stopUpdates}\n          disabled={!hubConnection || !isSubscribed}\n        >\n          Stop Updates\n        </button>\n      </div>\n\n      <div className=\"prices-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Current Price</th>\n              <th>Last Updated</th>\n              <th>Change</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map(item => (\n              <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>${item.price.toFixed(2)}</td>\n                <td>{new Date(item.updatedAt).toLocaleTimeString()}</td>\n                <td className={`change-arrow ${priceChanges[item.id] || 'same'}`}>\n                  {priceChanges[item.id] === 'up' ? '↑' : \n                   priceChanges[item.id] === 'down' ? '↓' : '→'}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAA+B,IAAI,CAAC;EACtF,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,cAAc,CAAC;EACtE,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAA8B,CAAC,CAAC,CAAC;;EAEjF;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAC5D,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAE1Cf,QAAQ,CAACc,YAAY,CAAC;;QAEtB;QACA,MAAME,kBAA+C,GAAG,CAAC,CAAC;QAC1DF,YAAY,CAACG,OAAO,CAAEC,IAAU,IAAK;UACnCF,kBAAkB,CAACE,IAAI,CAACC,EAAE,CAAC,GAAG,MAAM;QACtC,CAAC,CAAC;QACFT,eAAe,CAACM,kBAAkB,CAAC;QAEnCR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlB,SAAS,CAAC,MAAM;IACd;IACA,MAAM6B,UAAU,GAAG,IAAI5B,OAAO,CAAC6B,oBAAoB,CAAC,CAAC,CAClDC,OAAO,CAAC,iCAAiC,EAAE;MAC1CC,SAAS,EAAE/B,OAAO,CAACgC,iBAAiB,CAACC,UAAU;MAC/CC,eAAe,EAAE;IACnB,CAAC,CAAC,CACDC,gBAAgB,CAACnC,OAAO,CAACoC,QAAQ,CAACC,WAAW,CAAC,CAC9CC,KAAK,CAAC,CAAC;IAEV9B,gBAAgB,CAACoB,UAAU,CAAC;;IAE5B;IACA,OAAO,MAAM;MACX,IAAIA,UAAU,EAAE;QACdA,UAAU,CAACW,IAAI,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxC,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,aAAa,EAAE;IAEpB,MAAMiC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF9B,kBAAkB,CAAC,eAAe,CAAC;QACnC,MAAMH,aAAa,CAACkC,KAAK,CAAC,CAAC;QAC3B/B,kBAAkB,CAAC,WAAW,CAAC;MACjC,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdhB,kBAAkB,CAAC,mBAAmB,CAAC;QACvCiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;QACAgB,UAAU,CAACF,eAAe,EAAE,IAAI,CAAC;MACnC;IACF,CAAC;IAEDA,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAM;MACX;MACAjC,aAAa,CAACoC,GAAG,CAAC,qBAAqB,CAAC;MACxCpC,aAAa,CAACoC,GAAG,CAAC,oBAAoB,CAAC;IACzC,CAAC;EACH,CAAC,EAAE,CAACpC,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMqC,iBAAiB,GAAIC,YAAoB,IAAK;IAClDvC,QAAQ,CAACwC,YAAY,IAAI;MACvB,MAAMC,OAAoC,GAAG,CAAC,CAAC;MAE/CF,YAAY,CAACtB,OAAO,CAACyB,WAAW,IAAI;QAClC,MAAMC,WAAW,GAAGH,YAAY,CAACI,IAAI,CAAC1B,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKuB,WAAW,CAACvB,EAAE,CAAC;QAEzE,IAAI,CAACwB,WAAW,EAAE;UAChBF,OAAO,CAACC,WAAW,CAACvB,EAAE,CAAC,GAAG,MAAM;UAChC;QACF;QAEA,IAAIuB,WAAW,CAACG,KAAK,GAAGF,WAAW,CAACE,KAAK,EAAE;UACzCJ,OAAO,CAACC,WAAW,CAACvB,EAAE,CAAC,GAAG,IAAI;QAChC,CAAC,MAAM,IAAIuB,WAAW,CAACG,KAAK,GAAGF,WAAW,CAACE,KAAK,EAAE;UAChDJ,OAAO,CAACC,WAAW,CAACvB,EAAE,CAAC,GAAG,MAAM;QAClC,CAAC,MAAM;UACLsB,OAAO,CAACC,WAAW,CAACvB,EAAE,CAAC,GAAG,MAAM;QAClC;MACF,CAAC,CAAC;MAEFT,eAAe,CAAC+B,OAAO,CAAC;MACxB,OAAOF,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC7C,aAAa,EAAE;IAEpB,IAAI;MACF,MAAMA,aAAa,CAAC8C,MAAM,CAAC,yBAAyB,CAAC;MACrDzC,eAAe,CAAC,IAAI,CAAC;;MAErB;MACAL,aAAa,CAAC+C,EAAE,CAAC,qBAAqB,EAAGC,QAAgB,IAAK;QAC5DX,iBAAiB,CAACW,QAAQ,CAAC;MAC7B,CAAC,CAAC;MAEFhD,aAAa,CAAC+C,EAAE,CAAC,oBAAoB,EAAGN,WAAiB,IAAK;QAC5DJ,iBAAiB,CAACvC,KAAK,CAACmD,GAAG,CAAChC,IAAI,IAC9BA,IAAI,CAACC,EAAE,KAAKuB,WAAW,CAACvB,EAAE,GAAGuB,WAAW,GAAGxB,IAC7C,CAAC,CAAC;MACJ,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAM+B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAClD,aAAa,EAAE;IAEpB,IAAI;MACF,MAAMA,aAAa,CAAC8C,MAAM,CAAC,6BAA6B,CAAC;MACzDzC,eAAe,CAAC,KAAK,CAAC;;MAEtB;MACAL,aAAa,CAACoC,GAAG,CAAC,qBAAqB,CAAC;MACxCpC,aAAa,CAACoC,GAAG,CAAC,oBAAoB,CAAC;IAEzC,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,IAAIb,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAKwD,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxD;EAEA,oBACE7D,OAAA;IAAKwD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzD,OAAA;MAAAyD,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3B7D,OAAA;MAAKwD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BzD,OAAA;QAAMwD,SAAS,EAAE,kBAAkBjD,eAAe,CAACuD,WAAW,CAAC,CAAC;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3E7D,OAAA;QAAAyD,QAAA,GAAM,cACQ,EAAClD,eAAe,EAAC,cACpB,EAACE,YAAY,GAAG,IAAI,GAAG,KAAK;MAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEN7D,OAAA;MAAKwD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBzD,OAAA;QACEwD,SAAS,EAAC,kBAAkB;QAC5BO,OAAO,EAAEb,YAAa;QACtBc,QAAQ,EAAE,CAAC3D,aAAa,IAAII,YAAa;QAAAgD,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET7D,OAAA;QACEwD,SAAS,EAAC,oBAAoB;QAC9BO,OAAO,EAAER,WAAY;QACrBS,QAAQ,EAAE,CAAC3D,aAAa,IAAI,CAACI,YAAa;QAAAgD,QAAA,EAC3C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN7D,OAAA;MAAKwD,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BzD,OAAA;QAAAyD,QAAA,gBACEzD,OAAA;UAAAyD,QAAA,eACEzD,OAAA;YAAAyD,QAAA,gBACEzD,OAAA;cAAAyD,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChB7D,OAAA;cAAAyD,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB7D,OAAA;cAAAyD,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB7D,OAAA;cAAAyD,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR7D,OAAA;UAAAyD,QAAA,EACGtD,KAAK,CAACmD,GAAG,CAAChC,IAAI,iBACbtB,OAAA;YAAAyD,QAAA,gBACEzD,OAAA;cAAAyD,QAAA,EAAKnC,IAAI,CAAC2C;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpB7D,OAAA;cAAAyD,QAAA,GAAI,GAAC,EAACnC,IAAI,CAAC2B,KAAK,CAACiB,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjC7D,OAAA;cAAAyD,QAAA,EAAK,IAAIU,IAAI,CAAC7C,IAAI,CAAC8C,SAAS,CAAC,CAACC,kBAAkB,CAAC;YAAC;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxD7D,OAAA;cAAIwD,SAAS,EAAE,gBAAgB3C,YAAY,CAACS,IAAI,CAACC,EAAE,CAAC,IAAI,MAAM,EAAG;cAAAkC,QAAA,EAC9D5C,YAAY,CAACS,IAAI,CAACC,EAAE,CAAC,KAAK,IAAI,GAAG,GAAG,GACpCV,YAAY,CAACS,IAAI,CAACC,EAAE,CAAC,KAAK,MAAM,GAAG,GAAG,GAAG;YAAG;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA,GAPEvC,IAAI,CAACC,EAAE;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAnNID,GAAG;AAAAqE,EAAA,GAAHrE,GAAG;AAqNT,eAAeA,GAAG;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}